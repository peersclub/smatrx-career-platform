
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  image: 'image',
  emailVerified: 'emailVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  refresh_token_expires_in: 'refresh_token_expires_in',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bio: 'bio',
  title: 'title',
  company: 'company',
  location: 'location',
  linkedinUrl: 'linkedinUrl',
  githubUrl: 'githubUrl',
  websiteUrl: 'websiteUrl',
  yearsExperience: 'yearsExperience',
  careerStage: 'careerStage',
  industries: 'industries',
  languages: 'languages',
  availability: 'availability',
  remotePreference: 'remotePreference',
  salaryExpectation: 'salaryExpectation',
  targetRole: 'targetRole',
  careerTimeline: 'careerTimeline',
  willingToRelocate: 'willingToRelocate',
  preferredLocations: 'preferredLocations',
  onboardingCompleted: 'onboardingCompleted',
  onboardingCompletedAt: 'onboardingCompletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  categoryId: 'categoryId',
  tags: 'tags',
  aliases: 'aliases',
  relatedSkills: 'relatedSkills',
  marketData: 'marketData',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SkillCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  parentId: 'parentId',
  description: 'description',
  icon: 'icon',
  color: 'color',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSkillScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  skillId: 'skillId',
  level: 'level',
  yearsExperience: 'yearsExperience',
  source: 'source',
  verified: 'verified',
  verifiedAt: 'verifiedAt',
  endorsements: 'endorsements',
  lastUsed: 'lastUsed',
  proficiencyScore: 'proficiencyScore',
  evidence: 'evidence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CareerGoalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  description: 'description',
  roleId: 'roleId',
  targetDate: 'targetDate',
  targetSalary: 'targetSalary',
  priority: 'priority',
  status: 'status',
  motivations: 'motivations',
  constraints: 'constraints',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CareerRoleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  industry: 'industry',
  level: 'level',
  typicalSalary: 'typicalSalary',
  growthRate: 'growthRate',
  demandScore: 'demandScore',
  remoteAvailable: 'remoteAvailable',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RequiredSkillScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  skillId: 'skillId',
  level: 'level',
  importance: 'importance',
  weight: 'weight'
};

exports.Prisma.LearningPathScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  goalId: 'goalId',
  title: 'title',
  description: 'description',
  estimatedHours: 'estimatedHours',
  estimatedWeeks: 'estimatedWeeks',
  difficulty: 'difficulty',
  status: 'status',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MilestoneScalarFieldEnum = {
  id: 'id',
  pathId: 'pathId',
  order: 'order',
  title: 'title',
  description: 'description',
  skills: 'skills',
  resources: 'resources',
  duration: 'duration',
  deadline: 'deadline',
  completed: 'completed',
  completedAt: 'completedAt',
  feedback: 'feedback',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  pathId: 'pathId',
  milestoneId: 'milestoneId',
  type: 'type',
  status: 'status',
  percentage: 'percentage',
  timeSpent: 'timeSpent',
  notes: 'notes',
  metadata: 'metadata',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AchievementScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  name: 'name',
  description: 'description',
  icon: 'icon',
  metadata: 'metadata',
  unlockedAt: 'unlockedAt'
};

exports.Prisma.SkillImportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  source: 'source',
  status: 'status',
  data: 'data',
  results: 'results',
  error: 'error',
  startedAt: 'startedAt',
  completedAt: 'completedAt'
};

exports.Prisma.SkillAnalysisScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  results: 'results',
  recommendations: 'recommendations',
  marketInsights: 'marketInsights',
  createdAt: 'createdAt'
};

exports.Prisma.SkillMatchScalarFieldEnum = {
  id: 'id',
  analysisId: 'analysisId',
  goalId: 'goalId',
  matchScore: 'matchScore',
  gaps: 'gaps',
  strengths: 'strengths',
  readiness: 'readiness',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  Profile: 'Profile',
  Skill: 'Skill',
  SkillCategory: 'SkillCategory',
  UserSkill: 'UserSkill',
  CareerGoal: 'CareerGoal',
  CareerRole: 'CareerRole',
  RequiredSkill: 'RequiredSkill',
  LearningPath: 'LearningPath',
  Milestone: 'Milestone',
  Progress: 'Progress',
  Achievement: 'Achievement',
  SkillImport: 'SkillImport',
  SkillAnalysis: 'SkillAnalysis',
  SkillMatch: 'SkillMatch'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/Victor/smatrx-v3/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/Victor/smatrx-v3/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// User and Authentication\nmodel User {\n  id            String    @id @default(cuid())\n  email         String?   @unique\n  name          String?\n  image         String?\n  emailVerified DateTime?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  // Relations\n  accounts      Account[]\n  sessions      Session[]\n  profile       Profile?\n  skills        UserSkill[]\n  careerGoals   CareerGoal[]\n  learningPaths LearningPath[]\n  progress      Progress[]\n  achievements  Achievement[]\n  imports       SkillImport[]\n  analyses      SkillAnalysis[]\n\n  @@index([email])\n}\n\nmodel Account {\n  id                       String  @id @default(cuid())\n  userId                   String\n  type                     String\n  provider                 String\n  providerAccountId        String\n  refresh_token            String? @db.Text\n  access_token             String? @db.Text\n  expires_at               Int?\n  refresh_token_expires_in Int?\n  token_type               String?\n  scope                    String?\n  id_token                 String? @db.Text\n  session_state            String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@index([userId])\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n}\n\nmodel Profile {\n  id                    String    @id @default(cuid())\n  userId                String    @unique\n  bio                   String?\n  title                 String?\n  company               String?\n  location              String?\n  linkedinUrl           String?\n  githubUrl             String?\n  websiteUrl            String?\n  yearsExperience       Int?\n  careerStage           String? // student, entry, mid, senior, lead, executive\n  industries            String[]\n  languages             String[]\n  availability          String? // full-time, part-time, contract, freelance\n  remotePreference      String? // remote, hybrid, onsite\n  salaryExpectation     Json? // { min, max, currency }\n  targetRole            String?\n  careerTimeline        String? // immediate, 3months, 6months, 1year, exploring\n  willingToRelocate     Boolean   @default(false)\n  preferredLocations    String[]\n  onboardingCompleted   Boolean   @default(false)\n  onboardingCompletedAt DateTime?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\n// Skills and Categories\nmodel Skill {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  slug          String   @unique\n  description   String?\n  categoryId    String\n  tags          String[]\n  aliases       String[]\n  relatedSkills String[]\n  marketData    Json? // demand score, trend, job count, salary data\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  category    SkillCategory   @relation(fields: [categoryId], references: [id])\n  userSkills  UserSkill[]\n  requiredFor RequiredSkill[]\n\n  @@index([slug])\n  @@index([categoryId])\n}\n\nmodel SkillCategory {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  slug        String   @unique\n  parentId    String?\n  description String?\n  icon        String?\n  color       String?\n  order       Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  parent   SkillCategory?  @relation(\"CategoryHierarchy\", fields: [parentId], references: [id])\n  children SkillCategory[] @relation(\"CategoryHierarchy\")\n  skills   Skill[]\n\n  @@index([slug])\n  @@index([parentId])\n}\n\nmodel UserSkill {\n  id               String    @id @default(cuid())\n  userId           String\n  skillId          String\n  level            String // beginner, intermediate, advanced, expert\n  yearsExperience  Float?\n  source           String // linkedin, github, resume, manual, verified\n  verified         Boolean   @default(false)\n  verifiedAt       DateTime?\n  endorsements     Int       @default(0)\n  lastUsed         DateTime?\n  proficiencyScore Int? // 0-100\n  evidence         Json? // projects, certifications, etc.\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  skill Skill @relation(fields: [skillId], references: [id])\n\n  @@unique([userId, skillId])\n  @@index([userId])\n  @@index([skillId])\n}\n\n// Career Goals and Roles\nmodel CareerGoal {\n  id           String    @id @default(cuid())\n  userId       String\n  title        String\n  description  String?\n  roleId       String?\n  targetDate   DateTime?\n  targetSalary Json? // { min, max, currency }\n  priority     Int       @default(0)\n  status       String    @default(\"active\") // active, achieved, paused, cancelled\n  motivations  String[]\n  constraints  String[]\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role          CareerRole?    @relation(fields: [roleId], references: [id])\n  learningPaths LearningPath[]\n  skillMatches  SkillMatch[]\n\n  @@index([userId])\n  @@index([roleId])\n}\n\nmodel CareerRole {\n  id              String   @id @default(cuid())\n  title           String\n  slug            String   @unique\n  description     String?\n  industry        String?\n  level           String? // junior, mid, senior, lead, principal\n  typicalSalary   Json? // { min, max, median, currency }\n  growthRate      Float?\n  demandScore     Float?\n  remoteAvailable Boolean  @default(false)\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  requiredSkills RequiredSkill[]\n  careerGoals    CareerGoal[]\n\n  @@index([slug])\n}\n\nmodel RequiredSkill {\n  id         String @id @default(cuid())\n  roleId     String\n  skillId    String\n  level      String // Required proficiency level\n  importance String // must-have, nice-to-have, preferred\n  weight     Float  @default(1.0)\n\n  role  CareerRole @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  skill Skill      @relation(fields: [skillId], references: [id])\n\n  @@unique([roleId, skillId])\n  @@index([roleId])\n  @@index([skillId])\n}\n\n// Learning and Progress\nmodel LearningPath {\n  id             String    @id @default(cuid())\n  userId         String\n  goalId         String?\n  title          String\n  description    String?\n  estimatedHours Int?\n  estimatedWeeks Int?\n  difficulty     String? // beginner, intermediate, advanced\n  status         String    @default(\"draft\") // draft, active, completed, paused\n  completedAt    DateTime?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)\n  goal       CareerGoal? @relation(fields: [goalId], references: [id])\n  milestones Milestone[]\n  progress   Progress[]\n\n  @@index([userId])\n  @@index([goalId])\n}\n\nmodel Milestone {\n  id          String    @id @default(cuid())\n  pathId      String\n  order       Int\n  title       String\n  description String?\n  skills      String[]\n  resources   Json[] // Array of resource objects\n  duration    Int? // hours\n  deadline    DateTime?\n  completed   Boolean   @default(false)\n  completedAt DateTime?\n  feedback    Json?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  path     LearningPath @relation(fields: [pathId], references: [id], onDelete: Cascade)\n  progress Progress[]\n\n  @@index([pathId])\n}\n\nmodel Progress {\n  id          String    @id @default(cuid())\n  userId      String\n  pathId      String?\n  milestoneId String?\n  type        String // skill, milestone, path, achievement\n  status      String // started, in-progress, completed\n  percentage  Int       @default(0)\n  timeSpent   Int       @default(0) // minutes\n  notes       String?\n  metadata    Json?\n  startedAt   DateTime  @default(now())\n  completedAt DateTime?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  path      LearningPath? @relation(fields: [pathId], references: [id])\n  milestone Milestone?    @relation(fields: [milestoneId], references: [id])\n\n  @@index([userId])\n  @@index([pathId])\n  @@index([milestoneId])\n}\n\nmodel Achievement {\n  id          String   @id @default(cuid())\n  userId      String\n  type        String // skill, learning, career, community, streak\n  name        String\n  description String?\n  icon        String?\n  metadata    Json?\n  unlockedAt  DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([type])\n}\n\n// Skill Import and Analysis\nmodel SkillImport {\n  id          String    @id @default(cuid())\n  userId      String\n  source      String // linkedin, github, resume\n  status      String // pending, processing, completed, failed\n  data        Json? // Raw imported data\n  results     Json? // Processed results\n  error       String?\n  startedAt   DateTime  @default(now())\n  completedAt DateTime?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([source])\n}\n\nmodel SkillAnalysis {\n  id              String   @id @default(cuid())\n  userId          String\n  type            String // comprehensive, quick, role-specific\n  results         Json // Full analysis results\n  recommendations Json? // AI recommendations\n  marketInsights  Json? // Market data snapshot\n  createdAt       DateTime @default(now())\n\n  user    User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  matches SkillMatch[]\n\n  @@index([userId])\n  @@index([type])\n}\n\nmodel SkillMatch {\n  id         String   @id @default(cuid())\n  analysisId String\n  goalId     String\n  matchScore Float // 0-100\n  gaps       Json // Skill gaps identified\n  strengths  Json // Matching skills\n  readiness  Json // Readiness assessment\n  createdAt  DateTime @default(now())\n\n  analysis SkillAnalysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)\n  goal     CareerGoal    @relation(fields: [goalId], references: [id])\n\n  @@index([analysisId])\n  @@index([goalId])\n}\n",
  "inlineSchemaHash": "6a9c13e07aed34dd599be6694946000a6d12af178c355c076a970541dc31d8d3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToUser\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"UserToUserSkill\"},{\"name\":\"careerGoals\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToUser\"},{\"name\":\"learningPaths\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToUser\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"Progress\",\"relationName\":\"ProgressToUser\"},{\"name\":\"achievements\",\"kind\":\"object\",\"type\":\"Achievement\",\"relationName\":\"AchievementToUser\"},{\"name\":\"imports\",\"kind\":\"object\",\"type\":\"SkillImport\",\"relationName\":\"SkillImportToUser\"},{\"name\":\"analyses\",\"kind\":\"object\",\"type\":\"SkillAnalysis\",\"relationName\":\"SkillAnalysisToUser\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"refresh_token_expires_in\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsExperience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerStage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industries\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remotePreference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salaryExpectation\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"targetRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careerTimeline\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"willingToRelocate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"preferredLocations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"onboardingCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"onboardingCompletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileToUser\"}],\"dbName\":null},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aliases\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedSkills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marketData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"SkillCategory\",\"relationName\":\"SkillToSkillCategory\"},{\"name\":\"userSkills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"SkillToUserSkill\"},{\"name\":\"requiredFor\",\"kind\":\"object\",\"type\":\"RequiredSkill\",\"relationName\":\"RequiredSkillToSkill\"}],\"dbName\":null},\"SkillCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"SkillCategory\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"SkillCategory\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToSkillCategory\"}],\"dbName\":null},\"UserSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsExperience\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endorsements\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUsed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"proficiencyScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"evidence\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToUserSkill\"}],\"dbName\":null},\"CareerGoal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"targetSalary\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"motivations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"constraints\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CareerGoalToUser\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"CareerRole\",\"relationName\":\"CareerGoalToCareerRole\"},{\"name\":\"learningPaths\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"CareerGoalToLearningPath\"},{\"name\":\"skillMatches\",\"kind\":\"object\",\"type\":\"SkillMatch\",\"relationName\":\"CareerGoalToSkillMatch\"}],\"dbName\":null},\"CareerRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"typicalSalary\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"growthRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"demandScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"remoteAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"requiredSkills\",\"kind\":\"object\",\"type\":\"RequiredSkill\",\"relationName\":\"CareerRoleToRequiredSkill\"},{\"name\":\"careerGoals\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToCareerRole\"}],\"dbName\":null},\"RequiredSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"importance\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"CareerRole\",\"relationName\":\"CareerRoleToRequiredSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"RequiredSkillToSkill\"}],\"dbName\":null},\"LearningPath\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedWeeks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"difficulty\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LearningPathToUser\"},{\"name\":\"goal\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToLearningPath\"},{\"name\":\"milestones\",\"kind\":\"object\",\"type\":\"Milestone\",\"relationName\":\"LearningPathToMilestone\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"Progress\",\"relationName\":\"LearningPathToProgress\"}],\"dbName\":null},\"Milestone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resources\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"path\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToMilestone\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"Progress\",\"relationName\":\"MilestoneToProgress\"}],\"dbName\":null},\"Progress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"milestoneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeSpent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProgressToUser\"},{\"name\":\"path\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToProgress\"},{\"name\":\"milestone\",\"kind\":\"object\",\"type\":\"Milestone\",\"relationName\":\"MilestoneToProgress\"}],\"dbName\":null},\"Achievement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"unlockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AchievementToUser\"}],\"dbName\":null},\"SkillImport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"results\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillImportToUser\"}],\"dbName\":null},\"SkillAnalysis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"results\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"recommendations\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"marketInsights\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillAnalysisToUser\"},{\"name\":\"matches\",\"kind\":\"object\",\"type\":\"SkillMatch\",\"relationName\":\"SkillAnalysisToSkillMatch\"}],\"dbName\":null},\"SkillMatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"analysisId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"matchScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"gaps\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"strengths\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"readiness\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"analysis\",\"kind\":\"object\",\"type\":\"SkillAnalysis\",\"relationName\":\"SkillAnalysisToSkillMatch\"},{\"name\":\"goal\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToSkillMatch\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

