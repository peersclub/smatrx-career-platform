
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  image: 'image',
  emailVerified: 'emailVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  refresh_token_expires_in: 'refresh_token_expires_in',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bio: 'bio',
  title: 'title',
  company: 'company',
  location: 'location',
  linkedinUrl: 'linkedinUrl',
  githubUrl: 'githubUrl',
  websiteUrl: 'websiteUrl',
  yearsExperience: 'yearsExperience',
  careerStage: 'careerStage',
  industries: 'industries',
  languages: 'languages',
  availability: 'availability',
  remotePreference: 'remotePreference',
  salaryExpectation: 'salaryExpectation',
  targetRole: 'targetRole',
  careerTimeline: 'careerTimeline',
  willingToRelocate: 'willingToRelocate',
  preferredLocations: 'preferredLocations',
  onboardingCompleted: 'onboardingCompleted',
  onboardingCompletedAt: 'onboardingCompletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  categoryId: 'categoryId',
  tags: 'tags',
  aliases: 'aliases',
  relatedSkills: 'relatedSkills',
  marketData: 'marketData',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SkillCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  parentId: 'parentId',
  description: 'description',
  icon: 'icon',
  color: 'color',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSkillScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  skillId: 'skillId',
  level: 'level',
  yearsExperience: 'yearsExperience',
  source: 'source',
  verified: 'verified',
  verifiedAt: 'verifiedAt',
  endorsements: 'endorsements',
  lastUsed: 'lastUsed',
  proficiencyScore: 'proficiencyScore',
  evidence: 'evidence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CareerGoalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  description: 'description',
  roleId: 'roleId',
  targetDate: 'targetDate',
  targetSalary: 'targetSalary',
  priority: 'priority',
  status: 'status',
  motivations: 'motivations',
  constraints: 'constraints',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CareerRoleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  industry: 'industry',
  level: 'level',
  typicalSalary: 'typicalSalary',
  growthRate: 'growthRate',
  demandScore: 'demandScore',
  remoteAvailable: 'remoteAvailable',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RequiredSkillScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  skillId: 'skillId',
  level: 'level',
  importance: 'importance',
  weight: 'weight'
};

exports.Prisma.LearningPathScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  goalId: 'goalId',
  name: 'name',
  title: 'title',
  description: 'description',
  targetRole: 'targetRole',
  estimatedHours: 'estimatedHours',
  estimatedWeeks: 'estimatedWeeks',
  estimatedDuration: 'estimatedDuration',
  difficulty: 'difficulty',
  status: 'status',
  recommendations: 'recommendations',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MilestoneScalarFieldEnum = {
  id: 'id',
  pathId: 'pathId',
  order: 'order',
  title: 'title',
  description: 'description',
  skills: 'skills',
  resources: 'resources',
  duration: 'duration',
  deadline: 'deadline',
  completed: 'completed',
  completedAt: 'completedAt',
  feedback: 'feedback',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  pathId: 'pathId',
  milestoneId: 'milestoneId',
  type: 'type',
  status: 'status',
  percentage: 'percentage',
  timeSpent: 'timeSpent',
  notes: 'notes',
  metadata: 'metadata',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AchievementScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  name: 'name',
  description: 'description',
  icon: 'icon',
  metadata: 'metadata',
  unlockedAt: 'unlockedAt'
};

exports.Prisma.SkillImportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  source: 'source',
  status: 'status',
  data: 'data',
  results: 'results',
  error: 'error',
  startedAt: 'startedAt',
  completedAt: 'completedAt'
};

exports.Prisma.SkillAnalysisScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  results: 'results',
  recommendations: 'recommendations',
  marketInsights: 'marketInsights',
  createdAt: 'createdAt'
};

exports.Prisma.SkillMatchScalarFieldEnum = {
  id: 'id',
  analysisId: 'analysisId',
  goalId: 'goalId',
  matchScore: 'matchScore',
  gaps: 'gaps',
  strengths: 'strengths',
  readiness: 'readiness',
  createdAt: 'createdAt'
};

exports.Prisma.EducationRecordScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  institutionName: 'institutionName',
  degree: 'degree',
  field: 'field',
  gpa: 'gpa',
  startDate: 'startDate',
  endDate: 'endDate',
  verified: 'verified',
  verificationSource: 'verificationSource',
  verificationDate: 'verificationDate',
  transcriptUrl: 'transcriptUrl',
  credentialId: 'credentialId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SocialProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  platform: 'platform',
  username: 'username',
  profileUrl: 'profileUrl',
  verified: 'verified',
  followerCount: 'followerCount',
  followingCount: 'followingCount',
  engagementRate: 'engagementRate',
  contentScore: 'contentScore',
  influenceScore: 'influenceScore',
  lastFetchedAt: 'lastFetchedAt',
  metrics: 'metrics',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CertificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  issuer: 'issuer',
  issueDate: 'issueDate',
  expiryDate: 'expiryDate',
  credentialId: 'credentialId',
  credentialUrl: 'credentialUrl',
  verified: 'verified',
  verificationMethod: 'verificationMethod',
  skillsEarned: 'skillsEarned',
  certificateImageUrl: 'certificateImageUrl',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GitHubProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  username: 'username',
  profileUrl: 'profileUrl',
  totalRepos: 'totalRepos',
  totalCommits: 'totalCommits',
  totalPRs: 'totalPRs',
  totalIssues: 'totalIssues',
  totalStars: 'totalStars',
  languagesUsed: 'languagesUsed',
  contributionScore: 'contributionScore',
  consistencyScore: 'consistencyScore',
  codeQualityScore: 'codeQualityScore',
  topRepos: 'topRepos',
  contributionGraph: 'contributionGraph',
  lastFetchedAt: 'lastFetchedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CredibilityScoreScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  overallScore: 'overallScore',
  educationScore: 'educationScore',
  experienceScore: 'experienceScore',
  technicalScore: 'technicalScore',
  socialScore: 'socialScore',
  certificationScore: 'certificationScore',
  verificationLevel: 'verificationLevel',
  breakdown: 'breakdown',
  badges: 'badges',
  calculatedAt: 'calculatedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CareerSuggestionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  role: 'role',
  readinessScore: 'readinessScore',
  estimatedTime: 'estimatedTime',
  estimatedWeeks: 'estimatedWeeks',
  skillGaps: 'skillGaps',
  matchingSkills: 'matchingSkills',
  resources: 'resources',
  reasoning: 'reasoning',
  priority: 'priority',
  status: 'status',
  aiModel: 'aiModel',
  confidence: 'confidence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PublicProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  username: 'username',
  slug: 'slug',
  isPublic: 'isPublic',
  customDomain: 'customDomain',
  theme: 'theme',
  visibleSections: 'visibleSections',
  seoTitle: 'seoTitle',
  seoDescription: 'seoDescription',
  ogImageUrl: 'ogImageUrl',
  viewCount: 'viewCount',
  shareCount: 'shareCount',
  lastViewedAt: 'lastViewedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfileViewScalarFieldEnum = {
  id: 'id',
  profileUserId: 'profileUserId',
  viewerIp: 'viewerIp',
  viewerUserAgent: 'viewerUserAgent',
  referrer: 'referrer',
  country: 'country',
  city: 'city',
  viewedAt: 'viewedAt'
};

exports.Prisma.DataSourceSyncScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  source: 'source',
  status: 'status',
  lastSyncAt: 'lastSyncAt',
  nextSyncAt: 'nextSyncAt',
  syncFrequency: 'syncFrequency',
  error: 'error',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  entityId: 'entityId',
  status: 'status',
  method: 'method',
  documentUrls: 'documentUrls',
  reviewerNotes: 'reviewerNotes',
  submittedAt: 'submittedAt',
  reviewedAt: 'reviewedAt',
  reviewedBy: 'reviewedBy'
};

exports.Prisma.ResourceRecommendationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  careerSuggestionId: 'careerSuggestionId',
  type: 'type',
  platform: 'platform',
  title: 'title',
  url: 'url',
  provider: 'provider',
  duration: 'duration',
  cost: 'cost',
  difficulty: 'difficulty',
  skillsGained: 'skillsGained',
  relevanceScore: 'relevanceScore',
  status: 'status',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  Profile: 'Profile',
  Skill: 'Skill',
  SkillCategory: 'SkillCategory',
  UserSkill: 'UserSkill',
  CareerGoal: 'CareerGoal',
  CareerRole: 'CareerRole',
  RequiredSkill: 'RequiredSkill',
  LearningPath: 'LearningPath',
  Milestone: 'Milestone',
  Progress: 'Progress',
  Achievement: 'Achievement',
  SkillImport: 'SkillImport',
  SkillAnalysis: 'SkillAnalysis',
  SkillMatch: 'SkillMatch',
  EducationRecord: 'EducationRecord',
  SocialProfile: 'SocialProfile',
  Certification: 'Certification',
  GitHubProfile: 'GitHubProfile',
  CredibilityScore: 'CredibilityScore',
  CareerSuggestion: 'CareerSuggestion',
  PublicProfile: 'PublicProfile',
  ProfileView: 'ProfileView',
  DataSourceSync: 'DataSourceSync',
  VerificationRequest: 'VerificationRequest',
  ResourceRecommendation: 'ResourceRecommendation'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/Victor/smatrx-v3/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/Victor/smatrx-v3/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// User and Authentication\nmodel User {\n  id            String    @id @default(cuid())\n  email         String?   @unique\n  name          String?\n  image         String?\n  emailVerified DateTime?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  // Relations\n  accounts      Account[]\n  sessions      Session[]\n  profile       Profile?\n  skills        UserSkill[]\n  careerGoals   CareerGoal[]\n  learningPaths LearningPath[]\n  progress      Progress[]\n  achievements  Achievement[]\n  imports       SkillImport[]\n  analyses      SkillAnalysis[]\n\n  // New Credibility Platform Relations\n  educationRecords        EducationRecord[]\n  socialProfiles          SocialProfile[]\n  certifications          Certification[]\n  githubProfile           GitHubProfile?\n  credibilityScore        CredibilityScore?\n  careerSuggestions       CareerSuggestion[]\n  publicProfile           PublicProfile?\n  profileViews            ProfileView[]\n  dataSourceSyncs         DataSourceSync[]\n  verificationRequests    VerificationRequest[]\n  resourceRecommendations ResourceRecommendation[]\n\n  @@index([email])\n}\n\nmodel Account {\n  id                       String  @id @default(cuid())\n  userId                   String\n  type                     String\n  provider                 String\n  providerAccountId        String\n  refresh_token            String? @db.Text\n  access_token             String? @db.Text\n  expires_at               Int?\n  refresh_token_expires_in Int?\n  token_type               String?\n  scope                    String?\n  id_token                 String? @db.Text\n  session_state            String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@index([userId])\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n}\n\nmodel Profile {\n  id                    String    @id @default(cuid())\n  userId                String    @unique\n  bio                   String?\n  title                 String?\n  company               String?\n  location              String?\n  linkedinUrl           String?\n  githubUrl             String?\n  websiteUrl            String?\n  yearsExperience       Int?\n  careerStage           String? // student, entry, mid, senior, lead, executive\n  industries            String[]\n  languages             String[]\n  availability          String? // full-time, part-time, contract, freelance\n  remotePreference      String? // remote, hybrid, onsite\n  salaryExpectation     Json? // { min, max, currency }\n  targetRole            String?\n  careerTimeline        String? // immediate, 3months, 6months, 1year, exploring\n  willingToRelocate     Boolean   @default(false)\n  preferredLocations    String[]\n  onboardingCompleted   Boolean   @default(false)\n  onboardingCompletedAt DateTime?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\n// Skills and Categories\nmodel Skill {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  slug          String   @unique\n  description   String?\n  categoryId    String\n  tags          String[]\n  aliases       String[]\n  relatedSkills String[]\n  marketData    Json? // demand score, trend, job count, salary data\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  category    SkillCategory   @relation(fields: [categoryId], references: [id])\n  userSkills  UserSkill[]\n  requiredFor RequiredSkill[]\n\n  @@index([slug])\n  @@index([categoryId])\n}\n\nmodel SkillCategory {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  slug        String   @unique\n  parentId    String?\n  description String?\n  icon        String?\n  color       String?\n  order       Int      @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  parent   SkillCategory?  @relation(\"CategoryHierarchy\", fields: [parentId], references: [id])\n  children SkillCategory[] @relation(\"CategoryHierarchy\")\n  skills   Skill[]\n\n  @@index([slug])\n  @@index([parentId])\n}\n\nmodel UserSkill {\n  id               String    @id @default(cuid())\n  userId           String\n  skillId          String\n  level            String // beginner, intermediate, advanced, expert\n  yearsExperience  Float?\n  source           String // linkedin, github, resume, manual, verified\n  verified         Boolean   @default(false)\n  verifiedAt       DateTime?\n  endorsements     Int       @default(0)\n  lastUsed         DateTime?\n  proficiencyScore Int? // 0-100\n  evidence         Json? // projects, certifications, etc.\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  skill Skill @relation(fields: [skillId], references: [id])\n\n  @@unique([userId, skillId])\n  @@index([userId])\n  @@index([skillId])\n}\n\n// Career Goals and Roles\nmodel CareerGoal {\n  id           String    @id @default(cuid())\n  userId       String\n  title        String\n  description  String?\n  roleId       String?\n  targetDate   DateTime?\n  targetSalary Json? // { min, max, currency }\n  priority     Int       @default(0)\n  status       String    @default(\"active\") // active, achieved, paused, cancelled\n  motivations  String[]\n  constraints  String[]\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role          CareerRole?    @relation(fields: [roleId], references: [id])\n  learningPaths LearningPath[]\n  skillMatches  SkillMatch[]\n\n  @@index([userId])\n  @@index([roleId])\n}\n\nmodel CareerRole {\n  id              String   @id @default(cuid())\n  title           String\n  slug            String   @unique\n  description     String?\n  industry        String?\n  level           String? // junior, mid, senior, lead, principal\n  typicalSalary   Json? // { min, max, median, currency }\n  growthRate      Float?\n  demandScore     Float?\n  remoteAvailable Boolean  @default(false)\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  requiredSkills RequiredSkill[]\n  careerGoals    CareerGoal[]\n\n  @@index([slug])\n}\n\nmodel RequiredSkill {\n  id         String @id @default(cuid())\n  roleId     String\n  skillId    String\n  level      String // Required proficiency level\n  importance String // must-have, nice-to-have, preferred\n  weight     Float  @default(1.0)\n\n  role  CareerRole @relation(fields: [roleId], references: [id], onDelete: Cascade)\n  skill Skill      @relation(fields: [skillId], references: [id])\n\n  @@unique([roleId, skillId])\n  @@index([roleId])\n  @@index([skillId])\n}\n\n// Learning and Progress\nmodel LearningPath {\n  id                String    @id @default(cuid())\n  userId            String\n  goalId            String?\n  name              String\n  title             String?\n  description       String?\n  targetRole        String?\n  estimatedHours    Int?\n  estimatedWeeks    Int?\n  estimatedDuration Int? // in weeks\n  difficulty        String? // beginner, intermediate, advanced\n  status            String    @default(\"not_started\") // not_started, draft, active, completed, paused\n  recommendations   Json? // Store course recommendations\n  completedAt       DateTime?\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n\n  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)\n  goal       CareerGoal? @relation(fields: [goalId], references: [id])\n  milestones Milestone[]\n  progress   Progress[]\n\n  @@index([userId])\n  @@index([goalId])\n}\n\nmodel Milestone {\n  id          String    @id @default(cuid())\n  pathId      String\n  order       Int\n  title       String\n  description String?\n  skills      String[]\n  resources   Json[] // Array of resource objects\n  duration    Int? // hours\n  deadline    DateTime?\n  completed   Boolean   @default(false)\n  completedAt DateTime?\n  feedback    Json?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  path     LearningPath @relation(fields: [pathId], references: [id], onDelete: Cascade)\n  progress Progress[]\n\n  @@index([pathId])\n}\n\nmodel Progress {\n  id          String    @id @default(cuid())\n  userId      String\n  pathId      String?\n  milestoneId String?\n  type        String // skill, milestone, path, achievement\n  status      String // started, in-progress, completed\n  percentage  Int       @default(0)\n  timeSpent   Int       @default(0) // minutes\n  notes       String?\n  metadata    Json?\n  startedAt   DateTime  @default(now())\n  completedAt DateTime?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  path      LearningPath? @relation(fields: [pathId], references: [id])\n  milestone Milestone?    @relation(fields: [milestoneId], references: [id])\n\n  @@index([userId])\n  @@index([pathId])\n  @@index([milestoneId])\n}\n\nmodel Achievement {\n  id          String   @id @default(cuid())\n  userId      String\n  type        String // skill, learning, career, community, streak\n  name        String\n  description String?\n  icon        String?\n  metadata    Json?\n  unlockedAt  DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([type])\n}\n\n// Skill Import and Analysis\nmodel SkillImport {\n  id          String    @id @default(cuid())\n  userId      String\n  source      String // linkedin, github, resume\n  status      String // pending, processing, completed, failed\n  data        Json? // Raw imported data\n  results     Json? // Processed results\n  error       String?\n  startedAt   DateTime  @default(now())\n  completedAt DateTime?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([source])\n}\n\nmodel SkillAnalysis {\n  id              String   @id @default(cuid())\n  userId          String\n  type            String // comprehensive, quick, role-specific\n  results         Json // Full analysis results\n  recommendations Json? // AI recommendations\n  marketInsights  Json? // Market data snapshot\n  createdAt       DateTime @default(now())\n\n  user    User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  matches SkillMatch[]\n\n  @@index([userId])\n  @@index([type])\n}\n\nmodel SkillMatch {\n  id         String   @id @default(cuid())\n  analysisId String\n  goalId     String\n  matchScore Float // 0-100\n  gaps       Json // Skill gaps identified\n  strengths  Json // Matching skills\n  readiness  Json // Readiness assessment\n  createdAt  DateTime @default(now())\n\n  analysis SkillAnalysis @relation(fields: [analysisId], references: [id], onDelete: Cascade)\n  goal     CareerGoal    @relation(fields: [goalId], references: [id])\n\n  @@index([analysisId])\n  @@index([goalId])\n}\n\n// ============================================\n// CREDIBILITY PLATFORM MODELS\n// ============================================\n\n// Education & Academic Verification\nmodel EducationRecord {\n  id                 String    @id @default(cuid())\n  userId             String\n  institutionName    String\n  degree             String\n  field              String?\n  gpa                Float?\n  startDate          DateTime\n  endDate            DateTime?\n  verified           Boolean   @default(false)\n  verificationSource String?\n  verificationDate   DateTime?\n  transcriptUrl      String?\n  credentialId       String?\n  metadata           Json?\n  createdAt          DateTime  @default(now())\n  updatedAt          DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([verified])\n}\n\n// Social Media Profiles & Analytics\nmodel SocialProfile {\n  id             String   @id @default(cuid())\n  userId         String\n  platform       String\n  username       String\n  profileUrl     String?\n  verified       Boolean  @default(false)\n  followerCount  Int?\n  followingCount Int?\n  engagementRate Float?\n  contentScore   Float?\n  influenceScore Float?\n  lastFetchedAt  DateTime\n  metrics        Json     @default(\"{}\")\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, platform])\n  @@index([userId])\n  @@index([platform])\n  @@index([verified])\n}\n\n// Certifications & Learning Credentials\nmodel Certification {\n  id                  String    @id @default(cuid())\n  userId              String\n  name                String\n  issuer              String\n  issueDate           DateTime\n  expiryDate          DateTime?\n  credentialId        String?\n  credentialUrl       String?\n  verified            Boolean   @default(false)\n  verificationMethod  String?\n  skillsEarned        String[]\n  certificateImageUrl String?\n  metadata            Json?\n  createdAt           DateTime  @default(now())\n  updatedAt           DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([issuer])\n  @@index([verified])\n}\n\n// Enhanced GitHub Analytics\nmodel GitHubProfile {\n  id                String   @id @default(cuid())\n  userId            String   @unique\n  username          String\n  profileUrl        String?\n  totalRepos        Int      @default(0)\n  totalCommits      Int      @default(0)\n  totalPRs          Int      @default(0)\n  totalIssues       Int      @default(0)\n  totalStars        Int      @default(0)\n  languagesUsed     Json     @default(\"{}\")\n  contributionScore Float?\n  consistencyScore  Float?\n  codeQualityScore  Float?\n  topRepos          Json?\n  contributionGraph Json?\n  lastFetchedAt     DateTime\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([username])\n}\n\n// Credibility Scoring System\nmodel CredibilityScore {\n  id                 String   @id @default(cuid())\n  userId             String   @unique\n  overallScore       Float    @default(0)\n  educationScore     Float    @default(0)\n  experienceScore    Float    @default(0)\n  technicalScore     Float    @default(0)\n  socialScore        Float    @default(0)\n  certificationScore Float    @default(0)\n  verificationLevel  String   @default(\"basic\")\n  breakdown          Json     @default(\"{}\")\n  badges             String[]\n  calculatedAt       DateTime @default(now())\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([overallScore(sort: Desc)])\n  @@index([verificationLevel])\n}\n\n// AI-Powered Career Recommendations\nmodel CareerSuggestion {\n  id             String   @id @default(cuid())\n  userId         String\n  role           String\n  readinessScore Float\n  estimatedTime  String?\n  estimatedWeeks Int?\n  skillGaps      Json     @default(\"[]\")\n  matchingSkills Json     @default(\"[]\")\n  resources      Json     @default(\"[]\")\n  reasoning      String?\n  priority       Int      @default(3)\n  status         String   @default(\"active\")\n  aiModel        String?\n  confidence     Float?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  user                    User                     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  resourceRecommendations ResourceRecommendation[]\n\n  @@index([userId])\n  @@index([readinessScore(sort: Desc)])\n  @@index([status])\n  @@index([priority(sort: Desc)])\n}\n\n// Public Profile Settings\nmodel PublicProfile {\n  id              String    @id @default(cuid())\n  userId          String    @unique\n  username        String    @unique\n  slug            String    @unique\n  isPublic        Boolean   @default(false)\n  customDomain    String?   @unique\n  theme           String    @default(\"professional\")\n  visibleSections Json      @default(\"{}\")\n  seoTitle        String?\n  seoDescription  String?\n  ogImageUrl      String?\n  viewCount       Int       @default(0)\n  shareCount      Int       @default(0)\n  lastViewedAt    DateTime?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([username])\n  @@index([slug])\n  @@index([isPublic])\n}\n\n// Profile Analytics & Tracking\nmodel ProfileView {\n  id              String   @id @default(cuid())\n  profileUserId   String\n  viewerIp        String?\n  viewerUserAgent String?\n  referrer        String?\n  country         String?\n  city            String?\n  viewedAt        DateTime @default(now())\n\n  user User @relation(fields: [profileUserId], references: [id], onDelete: Cascade)\n\n  @@index([profileUserId])\n  @@index([viewedAt(sort: Desc)])\n}\n\n// Data Source Sync Status\nmodel DataSourceSync {\n  id            String    @id @default(cuid())\n  userId        String\n  source        String\n  status        String    @default(\"pending\")\n  lastSyncAt    DateTime?\n  nextSyncAt    DateTime?\n  syncFrequency String    @default(\"daily\")\n  error         String?\n  metadata      Json?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, source])\n  @@index([userId])\n  @@index([status])\n  @@index([nextSyncAt])\n}\n\n// Verification Requests\nmodel VerificationRequest {\n  id            String    @id @default(cuid())\n  userId        String\n  type          String\n  entityId      String\n  status        String    @default(\"pending\")\n  method        String?\n  documentUrls  String[]\n  reviewerNotes String?\n  submittedAt   DateTime  @default(now())\n  reviewedAt    DateTime?\n  reviewedBy    String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([status])\n  @@index([type])\n}\n\n// Learning Resource Recommendations\nmodel ResourceRecommendation {\n  id                 String   @id @default(cuid())\n  userId             String\n  careerSuggestionId String?\n  type               String\n  platform           String\n  title              String\n  url                String?\n  provider           String?\n  duration           String?\n  cost               String?\n  difficulty         String?\n  skillsGained       String[]\n  relevanceScore     Float?\n  status             String   @default(\"suggested\")\n  metadata           Json?\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n\n  user             User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n  careerSuggestion CareerSuggestion? @relation(fields: [careerSuggestionId], references: [id], onDelete: SetNull)\n\n  @@index([userId])\n  @@index([status])\n  @@index([type])\n  @@index([careerSuggestionId])\n}\n",
  "inlineSchemaHash": "cb62c9e5efe2dd74417c991a76b13ca3accb5813369f6129cef794f5739d833f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToUser\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"UserToUserSkill\"},{\"name\":\"careerGoals\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToUser\"},{\"name\":\"learningPaths\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToUser\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"Progress\",\"relationName\":\"ProgressToUser\"},{\"name\":\"achievements\",\"kind\":\"object\",\"type\":\"Achievement\",\"relationName\":\"AchievementToUser\"},{\"name\":\"imports\",\"kind\":\"object\",\"type\":\"SkillImport\",\"relationName\":\"SkillImportToUser\"},{\"name\":\"analyses\",\"kind\":\"object\",\"type\":\"SkillAnalysis\",\"relationName\":\"SkillAnalysisToUser\"},{\"name\":\"educationRecords\",\"kind\":\"object\",\"type\":\"EducationRecord\",\"relationName\":\"EducationRecordToUser\"},{\"name\":\"socialProfiles\",\"kind\":\"object\",\"type\":\"SocialProfile\",\"relationName\":\"SocialProfileToUser\"},{\"name\":\"certifications\",\"kind\":\"object\",\"type\":\"Certification\",\"relationName\":\"CertificationToUser\"},{\"name\":\"githubProfile\",\"kind\":\"object\",\"type\":\"GitHubProfile\",\"relationName\":\"GitHubProfileToUser\"},{\"name\":\"credibilityScore\",\"kind\":\"object\",\"type\":\"CredibilityScore\",\"relationName\":\"CredibilityScoreToUser\"},{\"name\":\"careerSuggestions\",\"kind\":\"object\",\"type\":\"CareerSuggestion\",\"relationName\":\"CareerSuggestionToUser\"},{\"name\":\"publicProfile\",\"kind\":\"object\",\"type\":\"PublicProfile\",\"relationName\":\"PublicProfileToUser\"},{\"name\":\"profileViews\",\"kind\":\"object\",\"type\":\"ProfileView\",\"relationName\":\"ProfileViewToUser\"},{\"name\":\"dataSourceSyncs\",\"kind\":\"object\",\"type\":\"DataSourceSync\",\"relationName\":\"DataSourceSyncToUser\"},{\"name\":\"verificationRequests\",\"kind\":\"object\",\"type\":\"VerificationRequest\",\"relationName\":\"UserToVerificationRequest\"},{\"name\":\"resourceRecommendations\",\"kind\":\"object\",\"type\":\"ResourceRecommendation\",\"relationName\":\"ResourceRecommendationToUser\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"refresh_token_expires_in\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsExperience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerStage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industries\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remotePreference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salaryExpectation\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"targetRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careerTimeline\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"willingToRelocate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"preferredLocations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"onboardingCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"onboardingCompletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileToUser\"}],\"dbName\":null},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aliases\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relatedSkills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marketData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"SkillCategory\",\"relationName\":\"SkillToSkillCategory\"},{\"name\":\"userSkills\",\"kind\":\"object\",\"type\":\"UserSkill\",\"relationName\":\"SkillToUserSkill\"},{\"name\":\"requiredFor\",\"kind\":\"object\",\"type\":\"RequiredSkill\",\"relationName\":\"RequiredSkillToSkill\"}],\"dbName\":null},\"SkillCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"SkillCategory\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"SkillCategory\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToSkillCategory\"}],\"dbName\":null},\"UserSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsExperience\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endorsements\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUsed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"proficiencyScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"evidence\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToUserSkill\"}],\"dbName\":null},\"CareerGoal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"targetSalary\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"motivations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"constraints\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CareerGoalToUser\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"CareerRole\",\"relationName\":\"CareerGoalToCareerRole\"},{\"name\":\"learningPaths\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"CareerGoalToLearningPath\"},{\"name\":\"skillMatches\",\"kind\":\"object\",\"type\":\"SkillMatch\",\"relationName\":\"CareerGoalToSkillMatch\"}],\"dbName\":null},\"CareerRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"typicalSalary\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"growthRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"demandScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"remoteAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"requiredSkills\",\"kind\":\"object\",\"type\":\"RequiredSkill\",\"relationName\":\"CareerRoleToRequiredSkill\"},{\"name\":\"careerGoals\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToCareerRole\"}],\"dbName\":null},\"RequiredSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"importance\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"CareerRole\",\"relationName\":\"CareerRoleToRequiredSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"RequiredSkillToSkill\"}],\"dbName\":null},\"LearningPath\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedWeeks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"difficulty\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recommendations\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LearningPathToUser\"},{\"name\":\"goal\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToLearningPath\"},{\"name\":\"milestones\",\"kind\":\"object\",\"type\":\"Milestone\",\"relationName\":\"LearningPathToMilestone\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"Progress\",\"relationName\":\"LearningPathToProgress\"}],\"dbName\":null},\"Milestone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resources\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"path\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToMilestone\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"Progress\",\"relationName\":\"MilestoneToProgress\"}],\"dbName\":null},\"Progress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"milestoneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeSpent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProgressToUser\"},{\"name\":\"path\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToProgress\"},{\"name\":\"milestone\",\"kind\":\"object\",\"type\":\"Milestone\",\"relationName\":\"MilestoneToProgress\"}],\"dbName\":null},\"Achievement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"unlockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AchievementToUser\"}],\"dbName\":null},\"SkillImport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"results\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillImportToUser\"}],\"dbName\":null},\"SkillAnalysis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"results\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"recommendations\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"marketInsights\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SkillAnalysisToUser\"},{\"name\":\"matches\",\"kind\":\"object\",\"type\":\"SkillMatch\",\"relationName\":\"SkillAnalysisToSkillMatch\"}],\"dbName\":null},\"SkillMatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"analysisId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"goalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"matchScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"gaps\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"strengths\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"readiness\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"analysis\",\"kind\":\"object\",\"type\":\"SkillAnalysis\",\"relationName\":\"SkillAnalysisToSkillMatch\"},{\"name\":\"goal\",\"kind\":\"object\",\"type\":\"CareerGoal\",\"relationName\":\"CareerGoalToSkillMatch\"}],\"dbName\":null},\"EducationRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"institutionName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"degree\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"field\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gpa\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verificationSource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verificationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transcriptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EducationRecordToUser\"}],\"dbName\":null},\"SocialProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"followerCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"followingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"engagementRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"contentScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"influenceScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastFetchedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metrics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SocialProfileToUser\"}],\"dbName\":null},\"Certification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"credentialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verificationMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillsEarned\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificateImageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CertificationToUser\"}],\"dbName\":null},\"GitHubProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalRepos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalCommits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalPRs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalIssues\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalStars\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"languagesUsed\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contributionScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"consistencyScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"codeQualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"topRepos\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contributionGraph\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastFetchedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GitHubProfileToUser\"}],\"dbName\":null},\"CredibilityScore\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"overallScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"educationScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"experienceScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"technicalScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"socialScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"certificationScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"verificationLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"breakdown\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"badges\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"calculatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CredibilityScoreToUser\"}],\"dbName\":null},\"CareerSuggestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"readinessScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"estimatedTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedWeeks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillGaps\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"matchingSkills\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"resources\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reasoning\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CareerSuggestionToUser\"},{\"name\":\"resourceRecommendations\",\"kind\":\"object\",\"type\":\"ResourceRecommendation\",\"relationName\":\"CareerSuggestionToResourceRecommendation\"}],\"dbName\":null},\"PublicProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"customDomain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"theme\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visibleSections\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"seoTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seoDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ogImageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shareCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastViewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PublicProfileToUser\"}],\"dbName\":null},\"ProfileView\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewerIp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewerUserAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"viewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileViewToUser\"}],\"dbName\":null},\"DataSourceSync\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastSyncAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextSyncAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"syncFrequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DataSourceSyncToUser\"}],\"dbName\":null},\"VerificationRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVerificationRequest\"}],\"dbName\":null},\"ResourceRecommendation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careerSuggestionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cost\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"difficulty\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillsGained\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relevanceScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResourceRecommendationToUser\"},{\"name\":\"careerSuggestion\",\"kind\":\"object\",\"type\":\"CareerSuggestion\",\"relationName\":\"CareerSuggestionToResourceRecommendation\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

